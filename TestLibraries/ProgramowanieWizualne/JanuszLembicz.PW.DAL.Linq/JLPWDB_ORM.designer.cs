#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JanuszLembicz.PW.DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="JanuszLembicz.PW.DB")]
	public partial class ORMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProducer(JanuszLembicz.PW.BO.Producer instance);
    partial void UpdateProducer(JanuszLembicz.PW.BO.Producer instance);
    partial void DeleteProducer(JanuszLembicz.PW.BO.Producer instance);
    partial void InsertProduct(JanuszLembicz.PW.BO.Product instance);
    partial void UpdateProduct(JanuszLembicz.PW.BO.Product instance);
    partial void DeleteProduct(JanuszLembicz.PW.BO.Product instance);
    #endregion
		
		public ORMDataContext() : 
				base("Data Source=CADLAPC;Initial Catalog=JanuszLembicz.PW.DB;Persist Security Info=Tru" +
						"e;User ID=PWDB_LOGIN", mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<JanuszLembicz.PW.BO.Producer> Producers
		{
			get
			{
				return this.GetTable<JanuszLembicz.PW.BO.Producer>();
			}
		}
		
		public System.Data.Linq.Table<JanuszLembicz.PW.BO.Product> Products
		{
			get
			{
				return this.GetTable<JanuszLembicz.PW.BO.Product>();
			}
		}
	}
}
namespace JanuszLembicz.PW.BO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JLPWDB_PRODUCERS")]
	public partial class Producer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProducerID;
		
		private string _Name;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProducerIDChanging(int value);
    partial void OnProducerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Producer()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID", Storage="_ProducerID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProducerID
		{
			get
			{
				return this._ProducerID;
			}
			set
			{
				if ((this._ProducerID != value))
				{
					this.OnProducerIDChanging(value);
					this.SendPropertyChanging();
					this._ProducerID = value;
					this.SendPropertyChanged("ProducerID");
					this.OnProducerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="NAME", Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producer_Product", Storage="_Products", ThisKey="ProducerID", OtherKey="ProducerID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Producer = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.Producer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JLPWDB_PRODUCTS")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductID;
		
		private int _ProducerID;
		
		private string _Name;
		
		private int _MemoryCapacity;
		
		private bool _HasDisplay;
		
		private System.Nullable<int> _IntInterface;
		
		private System.Nullable<int> _Warranty;
		
		private EntityRef<Producer> _Producer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(int value);
    partial void OnProductIDChanged();
    partial void OnProducerIDChanging(int value);
    partial void OnProducerIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMemoryCapacityChanging(int value);
    partial void OnMemoryCapacityChanged();
    partial void OnHasDisplayChanging(bool value);
    partial void OnHasDisplayChanged();
    partial void OnIntInterfaceChanging(System.Nullable<int> value);
    partial void OnIntInterfaceChanged();
    partial void OnWarrantyChanging(System.Nullable<int> value);
    partial void OnWarrantyChanged();
    #endregion
		
		public Product()
		{
			this._Producer = default(EntityRef<Producer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ID", Storage="_ProductID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PRODUCER_ID", Storage="_ProducerID", DbType="Int NOT NULL")]
		public int ProducerID
		{
			get
			{
				return this._ProducerID;
			}
			set
			{
				if ((this._ProducerID != value))
				{
					this.OnProducerIDChanging(value);
					this.SendPropertyChanging();
					this._ProducerID = value;
					this.SendPropertyChanged("ProducerID");
					this.OnProducerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="NAME", Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MEMORY_CAPACITY", Storage="_MemoryCapacity", DbType="Int NOT NULL")]
		public int MemoryCapacity
		{
			get
			{
				return this._MemoryCapacity;
			}
			set
			{
				if ((this._MemoryCapacity != value))
				{
					this.OnMemoryCapacityChanging(value);
					this.SendPropertyChanging();
					this._MemoryCapacity = value;
					this.SendPropertyChanged("MemoryCapacity");
					this.OnMemoryCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="HAS_DISPLAY", Storage="_HasDisplay", DbType="Bit NOT NULL")]
		public bool HasDisplay
		{
			get
			{
				return this._HasDisplay;
			}
			set
			{
				if ((this._HasDisplay != value))
				{
					this.OnHasDisplayChanging(value);
					this.SendPropertyChanging();
					this._HasDisplay = value;
					this.SendPropertyChanged("HasDisplay");
					this.OnHasDisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="INTERFACE", Storage="_IntInterface", DbType="Int")]
		public System.Nullable<int> IntInterface
		{
			get
			{
				return this._IntInterface;
			}
			set
			{
				if ((this._IntInterface != value))
				{
					this.OnIntInterfaceChanging(value);
					this.SendPropertyChanging();
					this._IntInterface = value;
					this.SendPropertyChanged("IntInterface");
					this.OnIntInterfaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="WARRANTY", Storage="_Warranty", DbType="Int")]
		public System.Nullable<int> Warranty
		{
			get
			{
				return this._Warranty;
			}
			set
			{
				if ((this._Warranty != value))
				{
					this.OnWarrantyChanging(value);
					this.SendPropertyChanging();
					this._Warranty = value;
					this.SendPropertyChanged("Warranty");
					this.OnWarrantyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producer_Product", Storage="_Producer", ThisKey="ProducerID", OtherKey="ProducerID", IsForeignKey=true)]
		public Producer Producer
		{
			get
			{
				return this._Producer.Entity;
			}
			set
			{
				Producer previousValue = this._Producer.Entity;
				if (((previousValue != value) 
							|| (this._Producer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producer.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._Producer.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProducerID = value.ProducerID;
					}
					else
					{
						this._ProducerID = default(int);
					}
					this.SendPropertyChanged("Producer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
